// <auto-generated />
using System;
using DotnetYuzuncuYilProje.Repository;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace DotnetYuzuncuYilProje.Repository.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20240122230216_initial")]
    partial class initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("DotnetYuzuncuYilProje.Core.Audience", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("Age")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("MovieId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedDateTime")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("MovieId");

                    b.ToTable("Audiences");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Age = 21,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "sevvalozdemir.tech@gmail.com",
                            FirstName = "Şevval",
                            LastName = "Özdemir",
                            MovieId = 1
                        },
                        new
                        {
                            Id = 2,
                            Age = 23,
                            CreatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "beyzakuru@gmail.com",
                            FirstName = "Beyza",
                            LastName = "Kuru",
                            MovieId = 4
                        });
                });

            modelBuilder.Entity("DotnetYuzuncuYilProje.Core.Movie", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("CreatedDateTime")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("MovieReleasedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("MovieTitle")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("MovieType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedDateTime")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Movies");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedDateTime = new DateTime(2024, 1, 23, 2, 2, 16, 722, DateTimeKind.Local).AddTicks(6680),
                            MovieReleasedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            MovieTitle = "Before Sunrise",
                            MovieType = "Romance"
                        },
                        new
                        {
                            Id = 2,
                            CreatedDateTime = new DateTime(2024, 1, 23, 2, 2, 16, 722, DateTimeKind.Local).AddTicks(6689),
                            MovieReleasedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            MovieTitle = "Before Sunset",
                            MovieType = "Romance"
                        },
                        new
                        {
                            Id = 3,
                            CreatedDateTime = new DateTime(2024, 1, 23, 2, 2, 16, 722, DateTimeKind.Local).AddTicks(6690),
                            MovieReleasedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            MovieTitle = "Before Midnight",
                            MovieType = "Romance"
                        },
                        new
                        {
                            Id = 4,
                            CreatedDateTime = new DateTime(2024, 1, 23, 2, 2, 16, 722, DateTimeKind.Local).AddTicks(6690),
                            MovieReleasedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            MovieTitle = "Inception",
                            MovieType = "Science-Fiction"
                        });
                });

            modelBuilder.Entity("DotnetYuzuncuYilProje.Core.Ticket", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("AudienceId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDateTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("Price")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedDateTime")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("AudienceId");

                    b.ToTable("Tickets");
                });

            modelBuilder.Entity("DotnetYuzuncuYilProje.Core.Audience", b =>
                {
                    b.HasOne("DotnetYuzuncuYilProje.Core.Movie", "Movie")
                        .WithMany("Audience")
                        .HasForeignKey("MovieId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Movie");
                });

            modelBuilder.Entity("DotnetYuzuncuYilProje.Core.Ticket", b =>
                {
                    b.HasOne("DotnetYuzuncuYilProje.Core.Audience", "Audience")
                        .WithMany()
                        .HasForeignKey("AudienceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Audience");
                });

            modelBuilder.Entity("DotnetYuzuncuYilProje.Core.Movie", b =>
                {
                    b.Navigation("Audience");
                });
#pragma warning restore 612, 618
        }
    }
}
